{"ast":null,"code":"import { GET_VIDEOGAMES, FILTER_BY_GENRE, FILTER_BY_STORED, SORT_BY_ALPHABET, SORT_BY_RATING, GET_GENRES, GET_DETAIL, FILTER_BY_PLATFORMS } from \"../actions/index\";\nconst initialState = {\n  games: [],\n  allGames: [],\n  genres: [],\n  detail: {}\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_VIDEOGAMES:\n      return {\n        ...state,\n        games: action.payload,\n        allGames: action.payload\n      };\n    case FILTER_BY_GENRE:\n      const allGames = state.allGames.allGames;\n      let gameGenre = action.payload === \"all\" ? allGames : allGames.filter(game => game.genres.includes(action.payload));\n      if (!gameGenre[0]) gameGenre = \"error\";\n      console.log(state);\n      return {\n        ...state,\n        games: gameGenre\n      };\n    case FILTER_BY_STORED:\n      const games = state.allGames;\n      let whereAbout = action.payload;\n      if (whereAbout === \"all\") whereAbout = games;\n      if (whereAbout === \"api\") whereAbout = games.filter(game => game.createdInDb === false);\n      if (whereAbout === \"db\") whereAbout = games.filter(game => game.createdInDb === true);\n      if (!whereAbout[0]) whereAbout = \"error\";\n      return {\n        ...state,\n        games: whereAbout\n      };\n    case SORT_BY_ALPHABET:\n      let letterOrder = action.payload === \"des\" ? state.games.allGames.sort((a, b) => {\n        if (a.name > b.name) return 1;\n        if (b.name > a.name) return -1;\n        return 0;\n      }) : state.games.allGames.sort((a, b) => {\n        if (a.name < b.name) return 1;\n        if (b.name < a.name) return -1;\n        return 0;\n      });\n      return {\n        ...state,\n        letterOrder\n      };\n    case SORT_BY_RATING:\n      let ratingOrder = action.payload === \"low\" ? state.games.sort((a, b) => {\n        if (a.rating > b.rating) return 1;\n        if (b.rating > a.rating) return -1;\n        return 0;\n      }) : state.games.sort((a, b) => {\n        if (a.rating < b.rating) return 1;\n        if (b.rating < a.rating) return -1;\n        return 0;\n      });\n      return {\n        ...state,\n        ratingOrder\n      };\n    case GET_GENRES:\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case GET_DETAIL:\n      return {\n        ...state,\n        detail: action.payload\n      };\n    case FILTER_BY_PLATFORMS:\n      let Games = state.allGames.allGames;\n      let platformFilter = action.payload === \"all\" ? Games : Games.filter(g => g.platforms.includes(action.payload));\n      if (!platformFilter[0]) platformFilter = \"error\";\n      return {\n        ...state,\n        games: platformFilter\n      };\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_VIDEOGAMES","FILTER_BY_GENRE","FILTER_BY_STORED","SORT_BY_ALPHABET","SORT_BY_RATING","GET_GENRES","GET_DETAIL","FILTER_BY_PLATFORMS","initialState","games","allGames","genres","detail","rootReducer","state","action","type","payload","gameGenre","filter","game","includes","console","log","whereAbout","createdInDb","letterOrder","sort","a","b","name","ratingOrder","rating","Games","platformFilter","g","platforms"],"sources":["C:/Users/Gonza/videogames/pi/PI-Videogames-main/client/src/redux/reducer/index.js"],"sourcesContent":["import { \r\nGET_VIDEOGAMES,\r\nFILTER_BY_GENRE,\r\nFILTER_BY_STORED,\r\nSORT_BY_ALPHABET,\r\nSORT_BY_RATING,\r\nGET_GENRES,\r\nGET_DETAIL,\r\nFILTER_BY_PLATFORMS\r\n} from \"../actions/index\";\r\n\r\nconst initialState = {\r\n    games : [],\r\n    allGames : [],\r\n    genres: [],\r\n    detail:{},\r\n}\r\n\r\nconst rootReducer = (state= initialState, action) =>{\r\n    switch (action.type) {\r\n        case GET_VIDEOGAMES:\r\n            return {\r\n                ...state, \r\n                games: action.payload,\r\n                allGames: action.payload\r\n            }\r\n\r\n        case FILTER_BY_GENRE:\r\n\r\n            const allGames = state.allGames.allGames;\r\n            let gameGenre = action.payload === \"all\" ? allGames : allGames.filter(game => game.genres.includes(action.payload))\r\n            if(!gameGenre[0]) gameGenre = \"error\"\r\n            console.log(state);\r\n        return{\r\n            ...state,\r\n            games: gameGenre\r\n        }\r\n\r\n        case FILTER_BY_STORED:\r\n        const games = state.allGames\r\n        let whereAbout = action.payload \r\n    \r\n        if(whereAbout === \"all\") whereAbout = games\r\n        if(whereAbout === \"api\") whereAbout = games.filter(game => game.createdInDb === false)\r\n        if(whereAbout === \"db\") whereAbout = games.filter(game => game.createdInDb === true)\r\n        if(!whereAbout[0]) whereAbout = \"error\"\r\n\r\n\r\n        return{\r\n            ...state, games: whereAbout\r\n        }\r\n\r\n        case SORT_BY_ALPHABET:\r\n        let letterOrder = action.payload === \"des\"?\r\n            state.games.allGames.sort((a,b)=>{\r\n                if(a.name > b.name) return 1\r\n                if(b.name > a.name) return -1\r\n                return 0\r\n            }):\r\n            state.games.allGames.sort((a,b)=>{\r\n                if(a.name < b.name) return 1\r\n                if(b.name < a.name) return -1\r\n                return 0\r\n                }) \r\n        \r\n        return{\r\n            ...state, letterOrder\r\n        }\r\n\r\n        case SORT_BY_RATING:\r\n            let ratingOrder = action.payload === \"low\"?\r\n            state.games.sort((a,b)=>{\r\n                if(a.rating > b.rating) return 1\r\n                if(b.rating > a.rating) return -1\r\n                return 0\r\n            }):\r\n            state.games.sort((a,b)=>{\r\n                if(a.rating < b.rating) return 1\r\n                if(b.rating < a.rating) return -1\r\n                return 0\r\n                }) \r\n        \r\n        return{\r\n            ...state, ratingOrder\r\n        }\r\n       \r\n        case GET_GENRES:\r\n            return{\r\n                ...state, genres: action.payload\r\n            }\r\n\r\n        case GET_DETAIL:\r\n            return{\r\n                ...state, detail: action.payload\r\n            }\r\n        case FILTER_BY_PLATFORMS:\r\n            let Games = state.allGames.allGames\r\n            let platformFilter = action.payload === \"all\"?\r\n            Games:\r\n            Games.filter(g=> g.platforms.includes(action.payload))\r\n            if(!platformFilter[0]) platformFilter = \"error\"\r\n        \r\n        return{\r\n            ...state, games : platformFilter\r\n        }\r\n        default:\r\n            return state\r\n            }\r\n\r\n}\r\n\r\nexport default rootReducer;\r\n\r\n\r\n   "],"mappings":"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"},"metadata":{},"sourceType":"module"}